{
    "openapi": "3.0.0",
    "info": {
        "title": "Daytask Documentation",
        "contact": {
            "email": "matinnjt2000@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/calendar-tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get tasks for a specific date",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date to retrieve tasks for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-02-07"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No tasks found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "fname",
                                    "lname",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "fname": {
                                        "description": "fname field",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "@Landatrip123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "loginUser",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout an authorized user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/project": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "operationId": "storeProject",
                "requestBody": {
                    "request": "StoreProjectRequest",
                    "description": "Project creation details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "detail",
                                    "start_date"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Project"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "New Project Detail"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project created!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating project!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/project/{project}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a specific project by its ID",
                "operationId": "showProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The ID of the project to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a specific project by its ID",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The ID of the project to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    }
                ],
                "requestBody": {
                    "request": "UpdateProjectRequest",
                    "description": "Project update details",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "title",
                                    "detail"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Project"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "Updated Project Detail"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project updated!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating project!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a specific project by its ID",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The ID of the project to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting project!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/assign-task-to-project/{project}": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Assign tasks to a specific project by its ID",
                "operationId": "assignTask",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The ID of the project to assign tasks",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "21"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task assignment details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tasks"
                                ],
                                "properties": {
                                    "tasks": {
                                        "type": "object",
                                        "example": {
                                            "0": "1",
                                            "1": "2",
                                            "3": "4"
                                        },
                                        "additionalProperties": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tasks assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks assigned!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error assigning tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error assigning tasks!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/unassign-task-from-project/{project}/{task}": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Unassign a task from a specific project by its ID",
                "operationId": "unassignTask",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The ID of the project to unassign the task from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "21"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "The ID of the task to unassign from the project",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task unassigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task unassigned!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error unassigning task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error unassigning task!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/ongoing-projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get all ongoing projects for the authenticated user",
                "operationId": "ongoingProjects",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving projects!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/completed-projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get all completed projects for the authenticated user",
                "operationId": "completedProjects",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving projects!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/task": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get User Tasks",
                "description": "Get User Tasks",
                "operationId": "getUserTasks",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store a Task",
                "description": "Store a Task",
                "operationId": "storeUserTask",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "detail"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Daytask Project"
                                    },
                                    "detail": {
                                        "type": "text",
                                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n     *             sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n     *             Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n     *             Duis aute irure dolor datat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-02-10 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/task/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Show a Task",
                "description": "Show a Task",
                "operationId": "showTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "A Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a Task",
                "description": "Update a Task",
                "operationId": "updateUserTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "A Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "detail",
                                    "_method"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "default": "put"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Daytask Project edit"
                                    },
                                    "detail": {
                                        "type": "text",
                                        "example": "Editting the detals"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-02-10 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a Task",
                "description": "Delete a Task",
                "operationId": "deleteUserTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "A Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search-tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "search a Task",
                "description": "Search a Task",
                "operationId": "searchTask",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Something...",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/assign-user-to-task/{task}": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Assign a User To a Task",
                "description": "Assign a User To a Task",
                "operationId": "assignUserToTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "A Task id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "users[0]": {
                                        "type": "string",
                                        "example": "mr-jillian-morissette-iv-reilly"
                                    },
                                    "users[1]": {
                                        "type": "string",
                                        "example": "maximo-wolff-hickle"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/unassign-user-from-task/{task}/{user}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Unassign a User To a Task",
                "description": "Unassign a User To a Task",
                "operationId": "unassignUserToTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "A Task id",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "A user slug",
                        "required": true,
                        "example": "mr-jillian-morissette-iv-reilly"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/create-global-task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a global task",
                "operationId": "createGlobalTask",
                "requestBody": {
                    "request": "StoreTaskRequest",
                    "description": "Task creation details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "detail"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Global Task"
                                    },
                                    "detail": {
                                        "type": "text",
                                        "example": "This is a global task"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-02-10 12:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task created!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating task!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a specific user by its ID",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The slug of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "missouri-robel-dietrich"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update a specific user by its ID",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The slug of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "missouri-robel-dietrich"
                        }
                    }
                ],
                "requestBody": {
                    "request": "UpdateUserRequest",
                    "description": "User update details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "fname",
                                    "lname",
                                    "email"
                                ],
                                "properties": {
                                    "_method": {
                                        "example": "put"
                                    },
                                    "fname": {
                                        "description": "fname field",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "304": {
                        "description": "User not updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User didn`t update :("
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a specific user by its ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The slug of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "john-doe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "User not deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search-users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Search users by a text",
                "operationId": "searchUser",
                "parameters": [
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The text to search users",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No users found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}